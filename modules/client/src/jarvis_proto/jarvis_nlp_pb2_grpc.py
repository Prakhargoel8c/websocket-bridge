# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from src.jarvis_proto import jarvis_nlp_core_pb2 as src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2
from src.jarvis_proto import jarvis_nlp_pb2 as src_dot_jarvis__proto_dot_jarvis__nlp__pb2


class JarvisNLPStub(object):
  """Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
  intent recognition (as well as slot filling), and entity extraction.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AnalyzeEntities = channel.unary_unary(
        '/nvidia.jarvis.nlp.JarvisNLP/AnalyzeEntities',
        request_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeEntitiesRequest.SerializeToString,
        response_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TokenClassResponse.FromString,
        )
    self.AnalyzeIntent = channel.unary_unary(
        '/nvidia.jarvis.nlp.JarvisNLP/AnalyzeIntent',
        request_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeIntentRequest.SerializeToString,
        response_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeIntentResponse.FromString,
        )
    self.PunctuateText = channel.unary_unary(
        '/nvidia.jarvis.nlp.JarvisNLP/PunctuateText',
        request_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TextTransformRequest.SerializeToString,
        response_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TextTransformResponse.FromString,
        )


class JarvisNLPServicer(object):
  """Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
  intent recognition (as well as slot filling), and entity extraction.
  """

  def AnalyzeEntities(self, request, context):
    """AnalyzeEntities accepts an input string and returns all named entities within
    the text, as well as a category and likelihood.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AnalyzeIntent(self, request, context):
    """AnalyzeIntent accepts an input string and returns the most likely
    intent as well as slots relevant to that intent.

    The model requires that a valid "domain" be passed in, and optionally
    supports including a previous intent classification result to provide
    context for the model.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PunctuateText(self, request, context):
    """PunctuateText takes text with no- or limited- punctuation and returns 
    the same text with corrected punctuation and capitalization.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_JarvisNLPServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AnalyzeEntities': grpc.unary_unary_rpc_method_handler(
          servicer.AnalyzeEntities,
          request_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeEntitiesRequest.FromString,
          response_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TokenClassResponse.SerializeToString,
      ),
      'AnalyzeIntent': grpc.unary_unary_rpc_method_handler(
          servicer.AnalyzeIntent,
          request_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeIntentRequest.FromString,
          response_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__pb2.AnalyzeIntentResponse.SerializeToString,
      ),
      'PunctuateText': grpc.unary_unary_rpc_method_handler(
          servicer.PunctuateText,
          request_deserializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TextTransformRequest.FromString,
          response_serializer=src_dot_jarvis__proto_dot_jarvis__nlp__core__pb2.TextTransformResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nvidia.jarvis.nlp.JarvisNLP', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
