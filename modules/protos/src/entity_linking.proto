syntax = "proto3";

package entitylinking;

service EntityLinking {
    // NearestNeighbors takes as input a input/query string. The
    // service compares the query's embedding created with the 
    // requested model and returns the closest n neighbors in 
    // the embedding space. 
    rpc LinkEntity(EntityLinkingRequest) returns (EntityLinkingResponse) {}

}

message EntityLinkingRequest {
    // Each repeated text element is handled independently for handling multiple
    // query strings with a single request. 
    repeated string text = 1;

    // Return the entity CUI, representative sentence, similarity score, and semantic
    // type of the top_n closest entities. 0 or 1 will return this information for
    // the top entity.
    uint32 top_n = 2;
    float sim_threshold = 3;
}

// Entity messages return the CUI, representative sentence, similarity score and 
// semantic type of the closest entites to the query sentences
message Entity {
    string entity_cui = 1;
    string rep_sent = 3;
    float sim_score = 2;
    string semantic_type = 4;
}

// Return message from the EntityLinking service
message EntityLinkingResponse {
    repeated Entity results = 1;
}
